#V3.30.19.01;_safe;_compile_date:_Apr 15 2022;_Stock_Synthesis_by_Richard_Methot_(NOAA)_using_ADMB_12.3
#_Stock_Synthesis_is_a_work_of_the_U.S._Government_and_is_not_subject_to_copyright_protection_in_the_United_States.
#_Foreign_copyrights_may_apply._See_copyright.txt_for_more_information.
#_User_support_available_at:NMFS.Stock.Synthesis@noaa.gov
#_User_info_available_at:https://vlab.noaa.gov/group/stock-synthesis
#_Source_code_at:_https://github.com/nmfs-stock-synthesis/stock-synthesis

#C file created using the SS_writectl function in the R package r4ss
#C file write time: 2022-07-05 12:47:50
#_data_and_control_files: ss3.dat // om.ctl
0  # 0 means do not read wtatage.ss; 1 means read and use wtatage.ss and also read and use growth parameters
1  #_N_Growth_Patterns (Growth Patterns, Morphs, Bio Patterns, GP are terms used interchangeably in SS3)
1 #_N_platoons_Within_GrowthPattern 
#_Cond 1 #_Platoon_within/between_stdev_ratio (no read if N_platoons=1)
#_Cond  1 #vector_platoon_dist_(-1_in_first_val_gives_normal_approx)
#
2 # recr_dist_method for parameters:  2=main effects for GP, Area, Settle timing; 3=each Settle entity; 4=none (only when N_GP*Nsettle*pop==1)
1 # not yet implemented; Future usage: Spawner-Recruitment: 1=global; 2=by area
1 #  number of recruitment settlement assignments 
0 # unused option
#GPattern month  area  age (for each settlement assignment)
 1 1 1 0
#
#_Cond 0 # N_movement_definitions goes here if Nareas > 1
#_Cond 1.0 # first age that moves (real age at begin of season, not integer) also cond on do_migration>0
#_Cond 1 1 1 2 4 10 # example move definition for seas=1, morph=1, source=1 dest=2, age1=4, age2=10
#
0 #_Nblock_Patterns
#_Cond 0 #_blocks_per_pattern 
# begin and end years of blocks
#
# controls for all timevary parameters 
1 #_time-vary parm bound check (1=warn relative to base parm bounds; 3=no bound check); Also see env (3) and dev (5) options to constrain with base bounds
#
# AUTOGEN
 0 0 0 0 0 # autogen: 1st element for biology, 2nd for SR, 3rd for Q, 4th reserved, 5th for selex
# where: 0 = autogen time-varying parms of this category; 1 = read each time-varying parm line; 2 = read then autogen if parm min==-12345
#
#_Available timevary codes
#_Block types: 0: P_block=P_base*exp(TVP); 1: P_block=P_base+TVP; 2: P_block=TVP; 3: P_block=P_block(-1) + TVP
#_Block_trends: -1: trend bounded by base parm min-max and parms in transformed units (beware); -2: endtrend and infl_year direct values; -3: end and infl as fraction of base range
#_EnvLinks:  1: P(y)=P_base*exp(TVP*env(y));  2: P(y)=P_base+TVP*env(y);  3: P(y)=f(TVP,env_Zscore) w/ logit to stay in min-max;  4: P(y)=2.0/(1.0+exp(-TVP1*env(y) - TVP2))
#_DevLinks:  1: P(y)*=exp(dev(y)*dev_se;  2: P(y)+=dev(y)*dev_se;  3: random walk;  4: zero-reverting random walk with rho;  5: like 4 with logit transform to stay in base min-max
#_DevLinks(more):  21-25 keep last dev for rest of years
#
#_Prior_codes:  0=none; 6=normal; 1=symmetric beta; 2=CASAL's beta; 3=lognormal; 4=lognormal with biascorr; 5=gamma
#
# setup for M, growth, wt-len, maturity, fecundity, (hermaphro), recr_distr, cohort_grow, (movement), (age error), (catch_mult), sex ratio 
#_NATMORT
0 #_natM_type:_0=1Parm; 1=N_breakpoints;_2=Lorenzen;_3=agespecific;_4=agespec_withseasinterpolate;_5=BETA:_Maunder_link_to_maturity
  #_no additional input for selected M option; read 1P per morph
#
1 # GrowthModel: 1=vonBert with L1&L2; 2=Richards with L1&L2; 3=age_specific_K_incr; 4=age_specific_K_decr; 5=age_specific_K_each; 6=NA; 7=NA; 8=growth cessation
0 #_Age(post-settlement)_for_L1;linear growth below this
999 #_Growth_Age_for_L2 (999 to use as Linf)
-999 #_exponential decay for growth above maxage (value should approx initial Z; -999 replicates 3.24; -998 to not allow growth above maxage)
0  #_placeholder for future growth feature
#
0 #_SD_add_to_LAA (set to 0.1 for SS2 V1.x compatibility)
0 #_CV_Growth_Pattern:  0 CV=f(LAA); 1 CV=F(A); 2 SD=F(LAA); 3 SD=F(A); 4 logSD=F(A)
#
2 #_maturity_option:  1=length logistic; 2=age logistic; 3=read age-maturity matrix by growth_pattern; 4=read age-fecundity; 5=disabled; 6=read length-maturity
0 #_First_Mature_Age
1 #_fecundity option:(1)eggs=Wt*(a+b*Wt);(2)eggs=a*L^b;(3)eggs=a*Wt^b; (4)eggs=a+b*L; (5)eggs=a+b*W
0 #_hermaphroditism option:  0=none; 1=female-to-male age-specific fxn; -1=male-to-female age-specific fxn
1 #_parameter_offset_approach for M, G, CV_G:  1- direct, no offset**; 2- male=fem_parm*exp(male_parm); 3: male=female*exp(parm) then old=young*exp(parm)
#_** in option 1, any male parameter with value = 0.0 and phase <0 is set equal to female parameter
#
#_growth_parms
#_ LO HI INIT PRIOR PR_SD PR_type PHASE env_var&link dev_link dev_minyr dev_maxyr dev_PH Block Block_Fxn
# Sex: 1  BioPattern: 1  NatMort
 0 1 0.36 0 0 0 -9 0 0 0 0 0 0 0 # NatM_uniform_Fem_GP_1
# Sex: 1  BioPattern: 1  Growth
 0 40 3 0 0 0 3 0 0 0 0 0 0 0 # L_at_Amin_Fem_GP_1
 60 150 117.9 0 0 0 3 0 0 0 0 0 0 0 # L_at_Amax_Fem_GP_1
 0 1 0.16 0 0 0 3 0 0 0 0 0 0 0 # VonBert_K_Fem_GP_1
 0 10 0.1 0 0 0 3 0 0 0 0 0 0 0 # CV_young_Fem_GP_1
 0 20 0.1 0 0 0 3 0 0 0 0 0 0 0 # CV_old_Fem_GP_1
# Sex: 1  BioPattern: 1  WtLen
 -9.99 9.99 5.58883e-06 0 0 0 -1 0 0 0 0 0 0 0 # Wtlen_1_Fem_GP_1
 -9.99 9.99 3.18851 0 0 0 -1 0 0 0 0 0 0 0 # Wtlen_2_Fem_GP_1
# Sex: 1  BioPattern: 1  Maturity&Fecundity
 -9.99 9.99 4.8832 0 0 0 -1 0 0 0 0 0 0 0 # Mat50%_Fem_GP_1
 -9.99 9.99 -0.9654 0 0 0 -1 0 0 0 0 0 0 0 # Mat_slope_Fem_GP_1
 -9.99 9.99 1 0 0 0 -1 0 0 0 0 0 0 0 # Eggs/kg_inter_Fem_GP_1
 -9.99 9.99 0 0 0 0 -1 0 0 0 0 0 0 0 # Eggs/kg_slope_wt_Fem_GP_1
# Hermaphroditism
#  Recruitment Distribution  
 -4 4 0 0 0 0 -4 0 0 0 0 0 0 0 # RecrDist_GP_1
 -4 4 0 0 0 0 -4 0 0 0 0 0 0 0 # RecrDist_Area_1
 -4 4 0 0 0 0 -4 0 0 0 0 0 0 0 # RecrDist_month_1
#  Cohort growth dev base
 0.1 10 1 1 1 0 -1 0 0 0 0 0 0 0 # CohortGrowDev
#  Movement
#  Age Error from parameters
#  catch multiplier
#  fraction female, by GP
 1e-06 0.999999 0.5 0.5 0.5 0 -99 0 0 0 0 0 0 0 # FracFemale_GP_1
#  M2 parameter for each predator fleet
#
#_no timevary MG parameters
#
#_seasonal_effects_on_biology_parms
 0 0 0 0 0 0 0 0 0 0 #_femwtlen1,femwtlen2,mat1,mat2,fec1,fec2,Malewtlen1,malewtlen2,L1,K
#_ LO HI INIT PRIOR PR_SD PR_type PHASE
#_Cond -2 2 0 0 -1 99 -2 #_placeholder when no seasonal MG parameters
#
3 #_Spawner-Recruitment; Options: 1=NA; 2=Ricker; 3=std_B-H; 4=SCAA; 5=Hockey; 6=B-H_flattop; 7=survival_3Parm; 8=Shepherd_3Parm; 9=RickerPower_3parm
0  # 0/1 to use steepness in initial equ recruitment calculation
0  #  future feature:  0/1 to make realized sigmaR a function of SR curvature
#_          LO            HI          INIT         PRIOR         PR_SD       PR_type      PHASE    env-var    use_dev   dev_mnyr   dev_mxyr     dev_PH      Block    Blk_Fxn #  parm_name
            12            16         13.15             0             0             0          1          0          0          0          0          0          0          0 # SR_LN(R0)
         -9.99          9.99             1             0             0             0         -1          0          0          0          0          0          0          0 # SR_BH_steep
         -9.99          9.99           0.6             0             0             0         -3          0          0          0          0          0          0          0 # SR_sigmaR
           -10             5             0             0             0             0         -1          0          0          0          0          0          0          0 # SR_regime
         -9.99          9.99             0             0             0             0         -1          0          0          0          0          0          0          0 # SR_autocorr
#_no timevary SR parameters
1 #do_recdev:  0=none; 1=devvector (R=F(SSB)+dev); 2=deviations (R=F(SSB)+dev); 3=deviations (R=R0*dev; dev2=R-f(SSB)); 4=like 3 with sum(dev2) adding penalty
27 # first year of main recr_devs; early devs can preceed this era
75 # last year of main recr_devs; forecast devs start in following year
-2 #_recdev phase 
1 # (0/1) to read 13 advanced options
 0 #_recdev_early_start (0=none; neg value makes relative to recdev_start)
 -4 #_recdev_early_phase
 0 #_forecast_recruitment phase (incl. late recr) (0 value resets to maxphase+1)
 1 #_lambda for Fcast_recr_like occurring before endyr+1
 27 #_last_yr_nobias_adj_in_MPD; begin of ramp
 28 #_first_yr_fullbias_adj_in_MPD; begin of plateau
 74 #_last_yr_fullbias_adj_in_MPD
 75 #_end_yr_for_ramp_in_MPD (can be in forecast to shape ramp, but SS3 sets bias_adj to 0.0 for fcast yrs)
 0 #_max_bias_adj_in_MPD (typical ~0.8; -3 sets all years to 0.0; -2 sets all non-forecast yrs w/ estimated recdevs to 1.0; -1 sets biasadj=1.0 for all yrs w/ recdevs)
 0 #_period of cycles in recruitment (N parms read below)
 -10 #min rec_dev
 10 #max rec_dev
 51 #_read_recdevs
#_end of advanced SR options
#
#_placeholder for full parameter lines for recruitment cycles
# Specified recr devs to read
#_Yr Input_value # Final_value
 26 0.657013 #  not used 
 27 0.324728 # 0.324728
 28 0.081844 # 0.081844
 29 -0.612719 # -0.612719
 30 -0.450174 # -0.450174
 31 -0.839059 # -0.839059
 32 -0.560283 # -0.560283
 33 -0.847428 # -0.847428
 34 -1.06292 # -1.06292
 35 -1.0332 # -1.0332
 36 0.581788 # 0.581788
 37 -0.275909 # -0.275909
 38 -0.78725 # -0.78725
 39 0.705364 # 0.705364
 40 0.627868 # 0.627868
 41 0.617805 # 0.617805
 42 0.650461 # 0.650461
 43 -0.788157 # -0.788157
 44 -0.288347 # -0.288347
 45 -0.896154 # -0.896154
 46 0.147904 # 0.147904
 47 -0.441156 # -0.441156
 48 -0.0881873 # -0.0881873
 49 -1.17178 # -1.17178
 50 -0.374552 # -0.374552
 51 -0.784468 # -0.784468
 52 0.757861 # 0.757861
 53 0.612775 # 0.612775
 54 -0.248566 # -0.248566
 55 0.492636 # 0.492636
 56 -1.07897 # -1.07897
 57 0.234831 # 0.234831
 58 -0.574852 # -0.574852
 59 -1.36117 # -1.36117
 60 -0.905465 # -0.905465
 61 -1.18719 # -1.18719
 62 -0.556943 # -0.556943
 63 0.329746 # 0.329746
 64 0.229612 # 0.229612
 65 -0.595706 # -0.595706
 66 -0.530826 # -0.530826
 67 0.272931 # 0.272931
 68 -0.00759775 # -0.00759775
 69 -0.79899 # -0.79899
 70 -0.167121 # -0.167121
 71 -1.47203 # -1.47203
 72 -1.12054 # -1.12054
 73 -0.0582542 # -0.0582542
 74 -0.369928 # -0.369928
 75 -1.23626 # -1.23626
 76 0.372844 # 0.372844
#
# all recruitment deviations
#  27R 28R 29R 30R 31R 32R 33R 34R 35R 36R 37R 38R 39R 40R 41R 42R 43R 44R 45R 46R 47R 48R 49R 50R 51R 52R 53R 54R 55R 56R 57R 58R 59R 60R 61R 62R 63R 64R 65R 66R 67R 68R 69R 70R 71R 72R 73R 74R 75R 76F
#  0.324728 0.081844 -0.612719 -0.450174 -0.839059 -0.560283 -0.847428 -1.06292 -1.0332 0.581788 -0.275909 -0.78725 0.705364 0.627868 0.617805 0.650461 -0.788157 -0.288347 -0.896154 0.147904 -0.441156 -0.0881873 -1.17178 -0.374552 -0.784468 0.757861 0.612775 -0.248566 0.492636 -1.07897 0.234831 -0.574852 -1.36117 -0.905465 -1.18719 -0.556943 0.329746 0.229612 -0.595706 -0.530826 0.272931 -0.00759775 -0.79899 -0.167121 -1.47203 -1.12054 -0.0582542 -0.369928 -1.23626 0.372844
#
#Fishing Mortality info 
0.01 # F ballpark value in units of annual_F
-25 # F ballpark year (neg value to disable)
2 # F_Method:  1=Pope midseason rate; 2=F as parameter; 3=F as hybrid; 4=fleet-specific parm/hybrid (#4 is superset of #2 and #3 and is recommended)
4 # max F (methods 2-4) or harvest fraction (method 1)
0 # overall start F value (all fleets; used if start phase = 1 and not reading parfile)
1 # start phase for parms (does hybrid in early phases)
50 # N detailed inputs to read
# detailed setup for F_Method=2; -Yr to fill remaining years
#Fleet Yr Seas F_value se phase
 1 26 1 0.01 0.005 1
 1 27 1 0.0200588 0.005 1
 1 28 1 0.0301176 0.005 1
 1 29 1 0.0401765 0.005 1
 1 30 1 0.0502353 0.005 1
 1 31 1 0.0602941 0.005 1
 1 32 1 0.0703529 0.005 1
 1 33 1 0.0804118 0.005 1
 1 34 1 0.0904706 0.005 1
 1 35 1 0.100529 0.005 1
 1 36 1 0.110588 0.005 1
 1 37 1 0.120647 0.005 1
 1 38 1 0.130706 0.005 1
 1 39 1 0.140765 0.005 1
 1 40 1 0.150824 0.005 1
 1 41 1 0.160882 0.005 1
 1 42 1 0.170941 0.005 1
 1 43 1 0.181 0.005 1
 1 44 1 0.191059 0.005 1
 1 45 1 0.201118 0.005 1
 1 46 1 0.211176 0.005 1
 1 47 1 0.221235 0.005 1
 1 48 1 0.231294 0.005 1
 1 49 1 0.241353 0.005 1
 1 50 1 0.251412 0.005 1
 1 51 1 0.261471 0.005 1
 1 52 1 0.271529 0.005 1
 1 53 1 0.281588 0.005 1
 1 54 1 0.291647 0.005 1
 1 55 1 0.301706 0.005 1
 1 56 1 0.311765 0.005 1
 1 57 1 0.321824 0.005 1
 1 58 1 0.331882 0.005 1
 1 59 1 0.341941 0.005 1
 1 60 1 0.352 0.005 1
 1 61 1 0.352 0.005 1
 1 62 1 0.352 0.005 1
 1 63 1 0.352 0.005 1
 1 64 1 0.352 0.005 1
 1 65 1 0.352 0.005 1
 1 66 1 0.352 0.005 1
 1 67 1 0.352 0.005 1
 1 68 1 0.352 0.005 1
 1 69 1 0.352 0.005 1
 1 70 1 0.352 0.005 1
 1 71 1 0.352 0.005 1
 1 72 1 0.352 0.005 1
 1 73 1 0.352 0.005 1
 1 74 1 0.352 0.005 1
 1 75 1 0.352 0.005 1
#
#_initial_F_parms; for each fleet x season that has init_catch; nest season in fleet; count = 0
#_for unconstrained init_F, use an arbitrary initial catch and set lambda=0 for its logL
#_ LO HI INIT PRIOR PR_SD  PR_type  PHASE
#
# F rates by fleet x season
# Yr:  26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76
# seas:  1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
# Fleet1 0.01 0.0200588 0.0301176 0.0401765 0.0502353 0.0602941 0.0703529 0.0804118 0.0904706 0.100529 0.110588 0.120647 0.130706 0.140765 0.150824 0.160882 0.170941 0.181 0.191059 0.201118 0.211176 0.221235 0.231294 0.241353 0.251412 0.261471 0.271529 0.281588 0.291647 0.301706 0.311765 0.321824 0.331882 0.341941 0.352 0.352 0.352 0.352 0.352 0.352 0.352 0.352 0.352 0.352 0.352 0.352 0.352 0.352 0.352 0.352 0
#
#_Q_setup for fleets with cpue or survey data
#_1:  fleet number
#_2:  link type: (1=simple q, 1 parm; 2=mirror simple q, 1 mirrored parm; 3=q and power, 2 parm; 4=mirror with offset, 2 parm)
#_3:  extra input for link, i.e. mirror fleet# or dev index number
#_4:  0/1 to select extra sd parameter
#_5:  0/1 for biasadj or not
#_6:  0/1 to float
#_   fleet      link link_info  extra_se   biasadj     float  #  fleetname
         2         1         0         0         0         0  #  Fleet2
-9999 0 0 0 0 0
#
#_Q_parms(if_any);Qunits_are_ln(q)
#_          LO            HI          INIT         PRIOR         PR_SD       PR_type      PHASE    env-var    use_dev   dev_mnyr   dev_mxyr     dev_PH      Block    Blk_Fxn  #  parm_name
            -5             5             0             0             0             0         -4          0          0          0          0          0          0          0  #  LnQ_base_Fleet2(2)
#_no timevary Q parameters
#
#_size_selex_patterns
#Pattern:_0;  parm=0; selex=1.0 for all sizes
#Pattern:_1;  parm=2; logistic; with 95% width specification
#Pattern:_5;  parm=2; mirror another size selex; PARMS pick the min-max bin to mirror
#Pattern:_11; parm=2; selex=1.0  for specified min-max population length bin range
#Pattern:_15; parm=0; mirror another age or length selex
#Pattern:_6;  parm=2+special; non-parm len selex
#Pattern:_43; parm=2+special+2;  like 6, with 2 additional param for scaling (average over bin range)
#Pattern:_8;  parm=8; double_logistic with smooth transitions and constant above Linf option
#Pattern:_9;  parm=6; simple 4-parm double logistic with starting length; parm 5 is first length; parm 6=1 does desc as offset
#Pattern:_21; parm=2+special; non-parm len selex, read as pairs of size, then selex
#Pattern:_22; parm=4; double_normal as in CASAL
#Pattern:_23; parm=6; double_normal where final value is directly equal to sp(6) so can be >1.0
#Pattern:_24; parm=6; double_normal with sel(minL) and sel(maxL), using joiners
#Pattern:_2;  parm=6; double_normal with sel(minL) and sel(maxL), using joiners, back compatibile version of 24 with 3.30.18 and older
#Pattern:_25; parm=3; exponential-logistic in length
#Pattern:_27; parm=special+3; cubic spline in length; parm1==1 resets knots; parm1==2 resets all 
#Pattern:_42; parm=special+3+2; cubic spline; like 27, with 2 additional param for scaling (average over bin range)
#_discard_options:_0=none;_1=define_retention;_2=retention&mortality;_3=all_discarded_dead;_4=define_dome-shaped_retention
#_Pattern Discard Male Special
 0 0 0 0 # 1 Fleet1
 0 0 0 0 # 2 Fleet2
#
#_age_selex_patterns
#Pattern:_0; parm=0; selex=1.0 for ages 0 to maxage
#Pattern:_10; parm=0; selex=1.0 for ages 1 to maxage
#Pattern:_11; parm=2; selex=1.0  for specified min-max age
#Pattern:_12; parm=2; age logistic
#Pattern:_13; parm=8; age double logistic. Recommend using pattern 18 instead.
#Pattern:_14; parm=nages+1; age empirical
#Pattern:_15; parm=0; mirror another age or length selex
#Pattern:_16; parm=2; Coleraine - Gaussian
#Pattern:_17; parm=nages+1; empirical as random walk  N parameters to read can be overridden by setting special to non-zero
#Pattern:_41; parm=2+nages+1; // like 17, with 2 additional param for scaling (average over bin range)
#Pattern:_18; parm=8; double logistic - smooth transition
#Pattern:_19; parm=6; simple 4-parm double logistic with starting age
#Pattern:_20; parm=6; double_normal,using joiners
#Pattern:_26; parm=3; exponential-logistic in age
#Pattern:_27; parm=3+special; cubic spline in age; parm1==1 resets knots; parm1==2 resets all 
#Pattern:_42; parm=2+special+3; // cubic spline; with 2 additional param for scaling (average over bin range)
#Age patterns entered with value >100 create Min_selage from first digit and pattern from remainder
#_Pattern Discard Male Special
 11 0 0 0 # 1 Fleet1
 11 0 0 0 # 2 Fleet2
#
#_          LO            HI          INIT         PRIOR         PR_SD       PR_type      PHASE    env-var    use_dev   dev_mnyr   dev_mxyr     dev_PH      Block    Blk_Fxn  #  parm_name
# 1   Fleet1 LenSelex
# 2   Fleet2 LenSelex
# 1   Fleet1 AgeSelex
             1            20             4          -999          -999             0        -99          0          0          0          0          0          0          0  #  minage@sel=1_Fleet1(1)
             1            20            20          -999          -999             0        -99          0          0          0          0          0          0          0  #  maxage@sel=1_Fleet1(1)
# 2   Fleet2 AgeSelex
             0            20             1          -999          -999             0        -99          0          0          0          0          0          0          0  #  minage@sel=1_Fleet2(2)
             0            20            20          -999          -999             0        -99          0          0          0          0          0          0          0  #  maxage@sel=1_Fleet2(2)
#_No_Dirichlet parameters
#_no timevary selex parameters
#
0   #  use 2D_AR1 selectivity(0/1)
#_no 2D_AR1 selex offset used
#
# Tag loss and Tag reporting parameters go next
0  # TG_custom:  0=no read and autogen if tag data exist; 1=read
#_Cond -6 6 1 1 2 0.01 -4 0 0 0 0 0 0 0  #_placeholder if no parameters
#
# no timevary parameters
#
#
# Input variance adjustments factors: 
 #_1=add_to_survey_CV
 #_2=add_to_discard_stddev
 #_3=add_to_bodywt_CV
 #_4=mult_by_lencomp_N
 #_5=mult_by_agecomp_N
 #_6=mult_by_size-at-age_N
 #_7=mult_by_generalized_sizecomp
#_Factor  Fleet  Value
 -9999   1    0  # terminator
#
4 #_maxlambdaphase
1 #_sd_offset; must be 1 if any growthCV, sigmaR, or survey extraSD is an estimated parameter
# read 0 changes to default Lambdas (default value is 1.0)
# Like_comp codes:  1=surv; 2=disc; 3=mnwt; 4=length; 5=age; 6=SizeFreq; 7=sizeage; 8=catch; 9=init_equ_catch; 
# 10=recrdev; 11=parm_prior; 12=parm_dev; 13=CrashPen; 14=Morphcomp; 15=Tag-comp; 16=Tag-negbin; 17=F_ballpark; 18=initEQregime
#like_comp fleet  phase  value  sizefreq_method
-9999  1  1  1  1  #  terminator
#
# lambdas (for info only; columns are phases)
#  0 0 0 0 #_CPUE/survey:_1
#  1 1 1 1 #_CPUE/survey:_2
#  1 1 1 1 #_lencomp:_1
#  0 0 0 0 #_lencomp:_2
#  0 0 0 0 #_agecomp:_1
#  1 1 1 1 #_agecomp:_2
#  1 1 1 1 #_init_equ_catch1
#  1 1 1 1 #_init_equ_catch2
#  1 1 1 1 #_recruitments
#  1 1 1 1 #_parameter-priors
#  1 1 1 1 #_parameter-dev-vectors
#  1 1 1 1 #_crashPenLambda
#  0 0 0 0 # F_ballpark_lambda
0 # (0/1/2) read specs for more stddev reporting: 0 = skip, 1 = read specs for reporting stdev for selectivity, size, and numbers, 2 = add options for M,Dyn. Bzero, SmryBio
 # 0 2 0 0 # Selectivity: (1) fleet, (2) 1=len/2=age/3=both, (3) year, (4) N selex bins
 # 0 0 # Growth: (1) growth pattern, (2) growth ages
 # 0 0 0 # Numbers-at-age: (1) area(-1 for all), (2) year, (3) N ages
 # -1 # list of bin #'s for selex std (-1 in first bin to self-generate)
 # -1 # list of ages for growth std (-1 in first bin to self-generate)
 # -1 # list of ages for NatAge std (-1 in first bin to self-generate)
999

